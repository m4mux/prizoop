#pragma once

// used for extended CPU instruction list (after cb instruction)

// CB_INSTRUCTION  : No operand instruction (none are)

// description, tick count (in cpu clocks), function name, op id, special code
CB_INSTRUCTION( "RLC B",			8,  		rlc_b         , 0x00, {}           )
CB_INSTRUCTION( "RLC C",			8,  		rlc_c         , 0x01, {}           )
CB_INSTRUCTION( "RLC D",			8,  		rlc_d         , 0x02, {}           )
CB_INSTRUCTION( "RLC E",			8,  		rlc_e         , 0x03, {}           )
CB_INSTRUCTION( "RLC H",			8,  		rlc_h         , 0x04, {}           )
CB_INSTRUCTION( "RLC L",			8,  		rlc_l         , 0x05, {}           )
CB_INSTRUCTION( "RLC (HL)",			16, 		rlc_hlp       , 0x06, {}           )
CB_INSTRUCTION( "RLC A",			8,  		rlc_a         , 0x07, {}           )
CB_INSTRUCTION( "RRC B",			8,  		rrc_b         , 0x08, {}           )
CB_INSTRUCTION( "RRC C",			8,  		rrc_c         , 0x09, {}           )
CB_INSTRUCTION( "RRC D",			8,  		rrc_d         , 0x0a, {}           )
CB_INSTRUCTION( "RRC E",			8,  		rrc_e         , 0x0b, {}           )
CB_INSTRUCTION( "RRC H",			8,  		rrc_h         , 0x0c, {}           )
CB_INSTRUCTION( "RRC L",			8,  		rrc_l         , 0x0d, {}           )
CB_INSTRUCTION( "RRC (HL)",			16, 		rrc_hlp       , 0x0e, {}           )
CB_INSTRUCTION( "RRC A",			8,  		rrc_a         , 0x0f, {}           )
CB_INSTRUCTION( "RL B",				8,  		rl_b          , 0x10, {}           )
CB_INSTRUCTION( "RL C",				8,  		rl_c          , 0x11, {}           )
CB_INSTRUCTION( "RL D",				8,  		rl_d          , 0x12, {}           )
CB_INSTRUCTION( "RL E",				8,  		rl_e          , 0x13, {}           )
CB_INSTRUCTION( "RL H",				8,  		rl_h          , 0x14, {}           )
CB_INSTRUCTION( "RL L",				8,  		rl_l          , 0x15, {}           )
CB_INSTRUCTION( "RL (HL)",			16, 		rl_hlp        , 0x16, {}           )
CB_INSTRUCTION( "RL A",				8,  		rl_a          , 0x17, {}           )
CB_INSTRUCTION( "RR B",				8,  		rr_b          , 0x18, {}           )
CB_INSTRUCTION( "RR C",				8,  		rr_c          , 0x19, {}           )
CB_INSTRUCTION( "RR D",				8,  		rr_d          , 0x1a, {}           )
CB_INSTRUCTION( "RR E",				8,  		rr_e          , 0x1b, {}           )
CB_INSTRUCTION( "RR H",				8,  		rr_h          , 0x1c, {}           )
CB_INSTRUCTION( "RR L",				8,  		rr_l          , 0x1d, {}           )
CB_INSTRUCTION( "RR (HL)",			16, 		rr_hlp        , 0x1e, {}           )
CB_INSTRUCTION( "RR A",				8,  		rr_a          , 0x1f, {}           )
CB_INSTRUCTION( "SLA B",			8,  		sla_b         , 0x20, {}           )
CB_INSTRUCTION( "SLA C",			8,  		sla_c         , 0x21, {}           )
CB_INSTRUCTION( "SLA D",			8,  		sla_d         , 0x22, {}           )
CB_INSTRUCTION( "SLA E",			8,  		sla_e         , 0x23, {}           )
CB_INSTRUCTION( "SLA H",			8,  		sla_h         , 0x24, {}           )
CB_INSTRUCTION( "SLA L",			8,  		sla_l         , 0x25, {}           )
CB_INSTRUCTION( "SLA (HL)",			16, 		sla_hlp       , 0x26, {}           )
CB_INSTRUCTION( "SLA A",			8,  		sla_a         , 0x27, {}           )
CB_INSTRUCTION( "SRA B",			8,  		sra_b         , 0x28, {}           )
CB_INSTRUCTION( "SRA C",			8,  		sra_c         , 0x29, {}           )
CB_INSTRUCTION( "SRA D",			8,  		sra_d         , 0x2a, {}           )
CB_INSTRUCTION( "SRA E",			8,  		sra_e         , 0x2b, {}           )
CB_INSTRUCTION( "SRA H",			8,  		sra_h         , 0x2c, {}           )
CB_INSTRUCTION( "SRA L",			8,  		sra_l         , 0x2d, {}           )
CB_INSTRUCTION( "SRA (HL)",			16, 		sra_hlp       , 0x2e, {}           )
CB_INSTRUCTION( "SRA A",			8,  		sra_a         , 0x2f, {}           )
CB_INSTRUCTION( "SWAP B",			8,  		swap_b        , 0x30, {}           )
CB_INSTRUCTION( "SWAP C",			8,  		swap_c        , 0x31, {}           )
CB_INSTRUCTION( "SWAP D",			8,  		swap_d        , 0x32, {}           )
CB_INSTRUCTION( "SWAP E",			8,  		swap_e        , 0x33, {}           )
CB_INSTRUCTION( "SWAP H",			8,  		swap_h        , 0x34, {}           )
CB_INSTRUCTION( "SWAP L",			8,  		swap_l        , 0x35, {}           )
CB_INSTRUCTION( "SWAP (HL)",		16, 		swap_hlp      , 0x36, {}           )
CB_INSTRUCTION( "SWAP A",			8,  		swap_a        , 0x37, {}           )
CB_INSTRUCTION( "SRL B",			8,  		srl_b         , 0x38, {}           )
CB_INSTRUCTION( "SRL C",			8,  		srl_c         , 0x39, {}           )
CB_INSTRUCTION( "SRL D",			8,  		srl_d         , 0x3a, {}           )
CB_INSTRUCTION( "SRL E",			8,  		srl_e         , 0x3b, {}           )
CB_INSTRUCTION( "SRL H",			8,  		srl_h         , 0x3c, {}           )
CB_INSTRUCTION( "SRL L",			8,  		srl_l         , 0x3d, {}           )
CB_INSTRUCTION( "SRL (HL)",			16, 		srl_hlp       , 0x3e, {}           )
CB_INSTRUCTION( "SRL A",			8,  		srl_a         , 0x3f, {}           )
CB_INSTRUCTION( "BIT 0, B",			8,  		bit_0_b       , 0x40, {}           )
CB_INSTRUCTION( "BIT 0, C",			8,  		bit_0_c       , 0x41, {}           )
CB_INSTRUCTION( "BIT 0, D",			8,  		bit_0_d       , 0x42, {}           )
CB_INSTRUCTION( "BIT 0, E",			8,  		bit_0_e       , 0x43, {}           )
CB_INSTRUCTION( "BIT 0, H",			8,  		bit_0_h       , 0x44, {}           )
CB_INSTRUCTION( "BIT 0, L",			8,  		bit_0_l       , 0x45, {}           )
CB_INSTRUCTION( "BIT 0, (HL)",		12, 		bit_0_hlp     , 0x46, {}           )
CB_INSTRUCTION( "BIT 0, A",			8,  		bit_0_a       , 0x47, {}           )
CB_INSTRUCTION( "BIT 1, B",			8,  		bit_1_b       , 0x48, {}           )
CB_INSTRUCTION( "BIT 1, C",			8,  		bit_1_c       , 0x49, {}           )
CB_INSTRUCTION( "BIT 1, D",			8,  		bit_1_d       , 0x4a, {}           )
CB_INSTRUCTION( "BIT 1, E",			8,  		bit_1_e       , 0x4b, {}           )
CB_INSTRUCTION( "BIT 1, H",			8,  		bit_1_h       , 0x4c, {}           )
CB_INSTRUCTION( "BIT 1, L",			8,  		bit_1_l       , 0x4d, {}           )
CB_INSTRUCTION( "BIT 1, (HL)",		12, 		bit_1_hlp     , 0x4e, {}           )
CB_INSTRUCTION( "BIT 1, A",			8,  		bit_1_a       , 0x4f, {}           )
CB_INSTRUCTION( "BIT 2, B",			8,  		bit_2_b       , 0x50, {}           )
CB_INSTRUCTION( "BIT 2, C",			8,  		bit_2_c       , 0x51, {}           )
CB_INSTRUCTION( "BIT 2, D",			8,  		bit_2_d       , 0x52, {}           )
CB_INSTRUCTION( "BIT 2, E",			8,  		bit_2_e       , 0x53, {}           )
CB_INSTRUCTION( "BIT 2, H",			8,  		bit_2_h       , 0x54, {}           )
CB_INSTRUCTION( "BIT 2, L",			8,  		bit_2_l       , 0x55, {}           )
CB_INSTRUCTION( "BIT 2, (HL)",		12, 		bit_2_hlp     , 0x56, {}           )
CB_INSTRUCTION( "BIT 2, A",			8,  		bit_2_a       , 0x57, {}           )
CB_INSTRUCTION( "BIT 3, B",			8,  		bit_3_b       , 0x58, {}           )
CB_INSTRUCTION( "BIT 3, C",			8,  		bit_3_c       , 0x59, {}           )
CB_INSTRUCTION( "BIT 3, D",			8,  		bit_3_d       , 0x5a, {}           )
CB_INSTRUCTION( "BIT 3, E",			8,  		bit_3_e       , 0x5b, {}           )
CB_INSTRUCTION( "BIT 3, H",			8,  		bit_3_h       , 0x5c, {}           )
CB_INSTRUCTION( "BIT 3, L",			8,  		bit_3_l       , 0x5d, {}           )
CB_INSTRUCTION( "BIT 3, (HL)",		12, 		bit_3_hlp     , 0x5e, {}           )
CB_INSTRUCTION( "BIT 3, A",			8,  		bit_3_a       , 0x5f, {}           )
CB_INSTRUCTION( "BIT 4, B",			8,  		bit_4_b       , 0x60, {}           )
CB_INSTRUCTION( "BIT 4, C",			8,  		bit_4_c       , 0x61, {}           )
CB_INSTRUCTION( "BIT 4, D",			8,  		bit_4_d       , 0x62, {}           )
CB_INSTRUCTION( "BIT 4, E",			8,  		bit_4_e       , 0x63, {}           )
CB_INSTRUCTION( "BIT 4, H",			8,  		bit_4_h       , 0x64, {}           )
CB_INSTRUCTION( "BIT 4, L",			8,  		bit_4_l       , 0x65, {}           )
CB_INSTRUCTION( "BIT 4, (HL)",		12, 		bit_4_hlp     , 0x66, {}           )
CB_INSTRUCTION( "BIT 4, A",			8,  		bit_4_a       , 0x67, {}           )
CB_INSTRUCTION( "BIT 5, B",			8,  		bit_5_b       , 0x68, {}           )
CB_INSTRUCTION( "BIT 5, C",			8,  		bit_5_c       , 0x69, {}           )
CB_INSTRUCTION( "BIT 5, D",			8,  		bit_5_d       , 0x6a, {}           )
CB_INSTRUCTION( "BIT 5, E",			8,  		bit_5_e       , 0x6b, {}           )
CB_INSTRUCTION( "BIT 6, H",			8,  		bit_5_h       , 0x6c, {}           )
CB_INSTRUCTION( "BIT 6, L",			8,  		bit_5_l       , 0x6d, {}           )
CB_INSTRUCTION( "BIT 5, (HL)",		12, 		bit_5_hlp     , 0x6e, {}           )
CB_INSTRUCTION( "BIT 5, A",			8,  		bit_5_a       , 0x6f, {}           )
CB_INSTRUCTION( "BIT 6, B",			8,  		bit_6_b       , 0x70, {}           )
CB_INSTRUCTION( "BIT 6, C",			8,  		bit_6_c       , 0x71, {}           )
CB_INSTRUCTION( "BIT 6, D",			8,  		bit_6_d       , 0x72, {}           )
CB_INSTRUCTION( "BIT 6, E",			8,  		bit_6_e       , 0x73, {}           )
CB_INSTRUCTION( "BIT 6, H",			8,  		bit_6_h       , 0x74, {}           )
CB_INSTRUCTION( "BIT 6, L",			8,  		bit_6_l       , 0x75, {}           )
CB_INSTRUCTION( "BIT 6, (HL)",		12, 		bit_6_hlp     , 0x76, {}           )
CB_INSTRUCTION( "BIT 6, A",			8,  		bit_6_a       , 0x77, {}           )
CB_INSTRUCTION( "BIT 7, B",			8,  		bit_7_b       , 0x78, {}           )
CB_INSTRUCTION( "BIT 7, C",			8,  		bit_7_c       , 0x79, {}           )
CB_INSTRUCTION( "BIT 7, D",			8,  		bit_7_d       , 0x7a, {}           )
CB_INSTRUCTION( "BIT 7, E",			8,  		bit_7_e       , 0x7b, {}           )
CB_INSTRUCTION( "BIT 7, H",			8,  		bit_7_h       , 0x7c, {}           )
CB_INSTRUCTION( "BIT 7, L",			8,  		bit_7_l       , 0x7d, {}           )
CB_INSTRUCTION( "BIT 7, (HL)",		12, 		bit_7_hlp     , 0x7e, {}           )
CB_INSTRUCTION( "BIT 7, A",			8,  		bit_7_a       , 0x7f, {}           )
CB_INSTRUCTION( "RES 0, B",			8,  		res_0_b       , 0x80, {}           )
CB_INSTRUCTION( "RES 0, C",			8,  		res_0_c       , 0x81, {}           )
CB_INSTRUCTION( "RES 0, D",			8,  		res_0_d       , 0x82, {}           )
CB_INSTRUCTION( "RES 0, E",			8,  		res_0_e       , 0x83, {}           )
CB_INSTRUCTION( "RES 0, H",			8,  		res_0_h       , 0x84, {}           )
CB_INSTRUCTION( "RES 0, L",			8,  		res_0_l       , 0x85, {}           )
CB_INSTRUCTION( "RES 0, (HL)",		12, 		res_0_hlp     , 0x86, {}           )
CB_INSTRUCTION( "RES 0, A",			8,  		res_0_a       , 0x87, {}           )
CB_INSTRUCTION( "RES 1, B",			8,  		res_1_b       , 0x88, {}           )
CB_INSTRUCTION( "RES 1, C",			8,  		res_1_c       , 0x89, {}           )
CB_INSTRUCTION( "RES 1, D",			8,  		res_1_d       , 0x8a, {}           )
CB_INSTRUCTION( "RES 1, E",			8,  		res_1_e       , 0x8b, {}           )
CB_INSTRUCTION( "RES 1, H",			8,  		res_1_h       , 0x8c, {}           )
CB_INSTRUCTION( "RES 1, L",			8,  		res_1_l       , 0x8d, {}           )
CB_INSTRUCTION( "RES 1, (HL)",		12, 		res_1_hlp     , 0x8e, {}           )
CB_INSTRUCTION( "RES 1, A",			8,  		res_1_a       , 0x8f, {}           )
CB_INSTRUCTION( "RES 2, B",			8,  		res_2_b       , 0x90, {}           )
CB_INSTRUCTION( "RES 2, C",			8,  		res_2_c       , 0x91, {}           )
CB_INSTRUCTION( "RES 2, D",			8,  		res_2_d       , 0x92, {}           )
CB_INSTRUCTION( "RES 2, E",			8,  		res_2_e       , 0x93, {}           )
CB_INSTRUCTION( "RES 2, H",			8,  		res_2_h       , 0x94, {}           )
CB_INSTRUCTION( "RES 2, L",			8,  		res_2_l       , 0x95, {}           )
CB_INSTRUCTION( "RES 2, (HL)",		12, 		res_2_hlp     , 0x96, {}           )
CB_INSTRUCTION( "RES 2, A",			8,  		res_2_a       , 0x97, {}           )
CB_INSTRUCTION( "RES 3, B",			8,  		res_3_b       , 0x98, {}           )
CB_INSTRUCTION( "RES 3, C",			8,  		res_3_c       , 0x99, {}           )
CB_INSTRUCTION( "RES 3, D",			8,  		res_3_d       , 0x9a, {}           )
CB_INSTRUCTION( "RES 3, E",			8,  		res_3_e       , 0x9b, {}           )
CB_INSTRUCTION( "RES 3, H",			8,  		res_3_h       , 0x9c, {}           )
CB_INSTRUCTION( "RES 3, L",			8,  		res_3_l       , 0x9d, {}           )
CB_INSTRUCTION( "RES 3, (HL)",		12, 		res_3_hlp     , 0x9e, {}           )
CB_INSTRUCTION( "RES 3, A",			8,  		res_3_a       , 0x9f, {}           )
CB_INSTRUCTION( "RES 4, B",			8,  		res_4_b       , 0xa0, {}           )
CB_INSTRUCTION( "RES 4, C",			8,  		res_4_c       , 0xa1, {}           )
CB_INSTRUCTION( "RES 4, D",			8,  		res_4_d       , 0xa2, {}           )
CB_INSTRUCTION( "RES 4, E",			8,  		res_4_e       , 0xa3, {}           )
CB_INSTRUCTION( "RES 4, H",			8,  		res_4_h       , 0xa4, {}           )
CB_INSTRUCTION( "RES 4, L",			8,  		res_4_l       , 0xa5, {}           )
CB_INSTRUCTION( "RES 4, (HL)",		12, 		res_4_hlp     , 0xa6, {}           )
CB_INSTRUCTION( "RES 4, A",			8,  		res_4_a       , 0xa7, {}           )
CB_INSTRUCTION( "RES 5, B",			8,  		res_5_b       , 0xa8, {}           )
CB_INSTRUCTION( "RES 5, C",			8,  		res_5_c       , 0xa9, {}           )
CB_INSTRUCTION( "RES 5, D",			8,  		res_5_d       , 0xaa, {}           )
CB_INSTRUCTION( "RES 5, E",			8,  		res_5_e       , 0xab, {}           )
CB_INSTRUCTION( "RES 5, H",			8,  		res_5_h       , 0xac, {}           )
CB_INSTRUCTION( "RES 5, L",			8,  		res_5_l       , 0xad, {}           )
CB_INSTRUCTION( "RES 5, (HL)",		12, 		res_5_hlp     , 0xae, {}           )
CB_INSTRUCTION( "RES 5, A",			8,  		res_5_a       , 0xaf, {}           )
CB_INSTRUCTION( "RES 6, B",			8,  		res_6_b       , 0xb0, {}           )
CB_INSTRUCTION( "RES 6, C",			8,  		res_6_c       , 0xb1, {}           )
CB_INSTRUCTION( "RES 6, D",			8,  		res_6_d       , 0xb2, {}           )
CB_INSTRUCTION( "RES 6, E",			8,  		res_6_e       , 0xb3, {}           )
CB_INSTRUCTION( "RES 6, H",			8,  		res_6_h       , 0xb4, {}           )
CB_INSTRUCTION( "RES 6, L",			8,  		res_6_l       , 0xb5, {}           )
CB_INSTRUCTION( "RES 6, (HL)",		12, 		res_6_hlp     , 0xb6, {}           )
CB_INSTRUCTION( "RES 6, A",			8,  		res_6_a       , 0xb7, {}           )
CB_INSTRUCTION( "RES 7, B",			8,  		res_7_b       , 0xb8, {}           )
CB_INSTRUCTION( "RES 7, C",			8,  		res_7_c       , 0xb9, {}           )
CB_INSTRUCTION( "RES 7, D",			8,  		res_7_d       , 0xba, {}           )
CB_INSTRUCTION( "RES 7, E",			8,  		res_7_e       , 0xbb, {}           )
CB_INSTRUCTION( "RES 7, H",			8,  		res_7_h       , 0xbc, {}           )
CB_INSTRUCTION( "RES 7, L",			8,  		res_7_l       , 0xbd, {}           )
CB_INSTRUCTION( "RES 7, (HL)",		12, 		res_7_hlp     , 0xbe, {}           )
CB_INSTRUCTION( "RES 7, A",			8,  		res_7_a       , 0xbf, {}           )
CB_INSTRUCTION( "SET 0, B",			8,  		set_0_b       , 0xc0, {}           )
CB_INSTRUCTION( "SET 0, C",			8,  		set_0_c       , 0xc1, {}           )
CB_INSTRUCTION( "SET 0, D",			8,  		set_0_d       , 0xc2, {}           )
CB_INSTRUCTION( "SET 0, E",			8,  		set_0_e       , 0xc3, {}           )
CB_INSTRUCTION( "SET 0, H",			8,  		set_0_h       , 0xc4, {}           )
CB_INSTRUCTION( "SET 0, L",			8,  		set_0_l       , 0xc5, {}           )
CB_INSTRUCTION( "SET 0, (HL)",		12, 		set_0_hlp     , 0xc6, {}           )
CB_INSTRUCTION( "SET 0, A",			8,  		set_0_a       , 0xc7, {}           )
CB_INSTRUCTION( "SET 1, B",			8,  		set_1_b       , 0xc8, {}           )
CB_INSTRUCTION( "SET 1, C",			8,  		set_1_c       , 0xc9, {}           )
CB_INSTRUCTION( "SET 1, D",			8,  		set_1_d       , 0xca, {}           )
CB_INSTRUCTION( "SET 1, E",			8,  		set_1_e       , 0xcb, {}           )
CB_INSTRUCTION( "SET 1, H",			8,  		set_1_h       , 0xcc, {}           )
CB_INSTRUCTION( "SET 1, L",			8,  		set_1_l       , 0xcd, {}           )
CB_INSTRUCTION( "SET 1, (HL)",		12, 		set_1_hlp     , 0xce, {}           )
CB_INSTRUCTION( "SET 1, A",			8,  		set_1_a       , 0xcf, {}           )
CB_INSTRUCTION( "SET 2, B",			8,  		set_2_b       , 0xd0, {}           )
CB_INSTRUCTION( "SET 2, C",			8,  		set_2_c       , 0xd1, {}           )
CB_INSTRUCTION( "SET 2, D",			8,  		set_2_d       , 0xd2, {}           )
CB_INSTRUCTION( "SET 2, E",			8,  		set_2_e       , 0xd3, {}           )
CB_INSTRUCTION( "SET 2, H",			8,  		set_2_h       , 0xd4, {}           )
CB_INSTRUCTION( "SET 2, L",			8,  		set_2_l       , 0xd5, {}           )
CB_INSTRUCTION( "SET 2, (HL)",		12, 		set_2_hlp     , 0xd6, {}           )
CB_INSTRUCTION( "SET 2, A",			8,  		set_2_a       , 0xd7, {}           )
CB_INSTRUCTION( "SET 3, B",			8,  		set_3_b       , 0xd8, {}           )
CB_INSTRUCTION( "SET 3, C",			8,  		set_3_c       , 0xd9, {}           )
CB_INSTRUCTION( "SET 3, D",			8,  		set_3_d       , 0xda, {}           )
CB_INSTRUCTION( "SET 3, E",			8,  		set_3_e       , 0xdb, {}           )
CB_INSTRUCTION( "SET 3, H",			8,  		set_3_h       , 0xdc, {}           )
CB_INSTRUCTION( "SET 3, L",			8,  		set_3_l       , 0xdd, {}           )
CB_INSTRUCTION( "SET 3, (HL)",		12, 		set_3_hlp     , 0xde, {}           )
CB_INSTRUCTION( "SET 3, A",			8,  		set_3_a       , 0xdf, {}           )
CB_INSTRUCTION( "SET 4, B",			8,  		set_4_b       , 0xe0, {}           )
CB_INSTRUCTION( "SET 4, C",			8,  		set_4_c       , 0xe1, {}           )
CB_INSTRUCTION( "SET 4, D",			8,  		set_4_d       , 0xe2, {}           )
CB_INSTRUCTION( "SET 4, E",			8,  		set_4_e       , 0xe3, {}           )
CB_INSTRUCTION( "SET 4, H",			8,  		set_4_h       , 0xe4, {}           )
CB_INSTRUCTION( "SET 4, L",			8,  		set_4_l       , 0xe5, {}           )
CB_INSTRUCTION( "SET 4, (HL)",		12, 		set_4_hlp     , 0xe6, {}           )
CB_INSTRUCTION( "SET 4, A",			8,  		set_4_a       , 0xe7, {}           )
CB_INSTRUCTION( "SET 5, B",			8,  		set_5_b       , 0xe8, {}           )
CB_INSTRUCTION( "SET 5, C",			8,  		set_5_c       , 0xe9, {}           )
CB_INSTRUCTION( "SET 5, D",			8,  		set_5_d       , 0xea, {}           )
CB_INSTRUCTION( "SET 5, E",			8,  		set_5_e       , 0xeb, {}           )
CB_INSTRUCTION( "SET 5, H",			8,  		set_5_h       , 0xec, {}           )
CB_INSTRUCTION( "SET 5, L",			8,  		set_5_l       , 0xed, {}           )
CB_INSTRUCTION( "SET 5, (HL)",		12, 		set_5_hlp  	  , 0xee, {}           )
CB_INSTRUCTION( "SET 5, A",			8,  		set_5_a       , 0xef, {}           )
CB_INSTRUCTION( "SET 6, B",			8,  		set_6_b       , 0xf0, {}           )
CB_INSTRUCTION( "SET 6, C",			8,  		set_6_c       , 0xf1, {}           )
CB_INSTRUCTION( "SET 6, D",			8,  		set_6_d       , 0xf2, {}           )
CB_INSTRUCTION( "SET 6, E",			8,  		set_6_e       , 0xf3, {}           )
CB_INSTRUCTION( "SET 6, H",			8,  		set_6_h       , 0xf4, {}           )
CB_INSTRUCTION( "SET 6, L",			8,  		set_6_l       , 0xf5, {}           )
CB_INSTRUCTION( "SET 6, (HL)",		12, 		set_6_hlp  	  , 0xf6, {}           )
CB_INSTRUCTION( "SET 6, A",			8,  		set_6_a       , 0xf7, {}           )
CB_INSTRUCTION( "SET 7, B",			8,  		set_7_b       , 0xf8, {}           )
CB_INSTRUCTION( "SET 7, C",			8,  		set_7_c       , 0xf9, {}           )
CB_INSTRUCTION( "SET 7, D",			8,  		set_7_d       , 0xfa, {}           )
CB_INSTRUCTION( "SET 7, E",			8,  		set_7_e       , 0xfb, {}           )
CB_INSTRUCTION( "SET 7, H",			8,  		set_7_h       , 0xfc, {}           )
CB_INSTRUCTION( "SET 7, L",			8,  		set_7_l       , 0xfd, {}           )
CB_INSTRUCTION( "SET 7, (HL)",		12, 		set_7_hlp     , 0xfe, {}           )
CB_INSTRUCTION( "SET 7, A",			8,			set_7_a       , 0xff, {}           )
